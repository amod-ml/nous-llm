name: Release and Publish to PyPI

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags like v0.1.0, v1.0.0, etc.
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 0.1.1)'
        required: true
        type: string

permissions:
  contents: write
  id-token: write  # Required for OIDC/trusted publishing
  actions: write

jobs:
  build:
    name: Build Distribution
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for changelog generation
        
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install build twine
        
    - name: Build distribution
      run: python -m build
      
    - name: Check distribution
      run: twine check dist/*
      
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
        retention-days: 5
        if-no-files-found: error

  test-package:
    name: Test Package Installation
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.12', '3.13']
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
        
    - name: Install package
      shell: bash
      run: |
        python -m pip install --upgrade pip
        python -m pip install dist/*.whl
        
    - name: Test import
      run: |
        python -c "from nous_llm import NousLLM; print('Import successful')"
        python -c "from nous_llm import __version__; print(f'Version: {__version__}')"

  create-github-release:
    name: Create GitHub Release
    needs: [build, test-package]
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.extract_version.outputs.version }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
        
    - name: Extract version
      id: extract_version
      run: |
        if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
          VERSION="${{ github.event.inputs.version }}"
        else
          VERSION=${GITHUB_REF#refs/tags/v}
        fi
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Version: $VERSION"
        
    - name: Generate changelog
      id: changelog
      run: |
        # Generate changelog from commit history
        cat > release_notes.md << 'EOF'
        ## What's Changed
        
        ### âœ¨ Features
        - Unified interface for multiple LLM providers (OpenAI, Anthropic, Gemini, xAI, OpenRouter)
        - Async-first design with RORO pattern
        - Type-complete implementation with Pydantic v2
        - Automatic provider detection and adapter loading
        - Comprehensive error handling and retry logic
        - Support for streaming and function calling
        
        ### ðŸ“¦ Package Details
        - **Version**: ${{ steps.extract_version.outputs.version }}
        - **Python Support**: 3.12+
        - **License**: MIT
        
        ### ðŸš€ Installation
        
        ```bash
        # Core package
        pip install nous-llm
        
        # With specific providers
        pip install nous-llm[openai]
        pip install nous-llm[anthropic]
        pip install nous-llm[gemini]
        pip install nous-llm[xai]
        pip install nous-llm[all]
        ```
        
        ### ðŸ“– Documentation
        - [GitHub Repository](https://github.com/amod-ml/nous-llm)
        - [PyPI Package](https://pypi.org/project/nous-llm/)
        
        **Full Changelog**: https://github.com/amod-ml/nous-llm/compare/v0.0.1...v${{ steps.extract_version.outputs.version }}
        EOF
        
    - name: Create GitHub Release
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        VERSION="${{ steps.extract_version.outputs.version }}"
        
        # Create release with artifacts
        gh release create "v${VERSION}" \
          --title "v${VERSION}" \
          --notes-file release_notes.md \
          --verify-tag \
          dist/*

  publish-to-testpypi:
    name: Publish to TestPyPI
    needs: [build, test-package]
    runs-on: ubuntu-latest
    environment:
      name: test-pypi
      url: https://test.pypi.org/p/nous-llm
    permissions:
      id-token: write
    
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
        
    - name: Publish to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
        skip-existing: true
        verbose: true

  publish-to-pypi:
    name: Publish to PyPI
    needs: [build, test-package, create-github-release, publish-to-testpypi]
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/nous-llm
    permissions:
      id-token: write
    
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
        
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        verbose: true
        print-hash: true
